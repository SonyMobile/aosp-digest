# This file is based on default .gitlab-ci.yml template for python.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python3 -V  # Print out python version for debugging
  - pip3 install virtualenv
  - virtualenv venv
  - source venv/bin/activate

test:
  script:
    - pip3 install -r requirements.txt
    - pip3 install -r dev-requirements.txt
    - files=$(git diff --name-only origin/$CI_DEFAULT_BRANCH)
    - echo $files # print out MR files for debugging
    - declare -A fcl; for p in $files; do fcl["${p##*.}"]+=" $p"; done;
    - if [[ -n ${fcl[py]} ]]; then isort ${fcl[py]}; fi
    - if [[ -n ${fcl[py]} ]]; then black ${fcl[py]}; fi
    - if [[ -n ${fcl[py]} ]]; then pylint ${fcl[py]}; fi
    - if [[ -n ${fcl[txt]} ]]; then safety check -r ${fcl[txt]}; fi
  only:
    - merge_requests

